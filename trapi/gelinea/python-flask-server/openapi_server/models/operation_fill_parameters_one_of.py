# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class OperationFillParametersOneOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowlist=None, qedge_keys=None):  # noqa: E501
        """OperationFillParametersOneOf - a model defined in OpenAPI

        :param allowlist: The allowlist of this OperationFillParametersOneOf.  # noqa: E501
        :type allowlist: List[str]
        :param qedge_keys: The qedge_keys of this OperationFillParametersOneOf.  # noqa: E501
        :type qedge_keys: List[str]
        """
        self.openapi_types = {
            'allowlist': List[str],
            'qedge_keys': List[str]
        }

        self.attribute_map = {
            'allowlist': 'allowlist',
            'qedge_keys': 'qedge_keys'
        }

        self._allowlist = allowlist
        self._qedge_keys = qedge_keys

    @classmethod
    def from_dict(cls, dikt) -> 'OperationFillParametersOneOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OperationFill_parameters_oneOf of this OperationFillParametersOneOf.  # noqa: E501
        :rtype: OperationFillParametersOneOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowlist(self):
        """Gets the allowlist of this OperationFillParametersOneOf.

        List of knowledge providers/sources that may be used to provide knowledge.  # noqa: E501

        :return: The allowlist of this OperationFillParametersOneOf.
        :rtype: List[str]
        """
        return self._allowlist

    @allowlist.setter
    def allowlist(self, allowlist):
        """Sets the allowlist of this OperationFillParametersOneOf.

        List of knowledge providers/sources that may be used to provide knowledge.  # noqa: E501

        :param allowlist: The allowlist of this OperationFillParametersOneOf.
        :type allowlist: List[str]
        """

        self._allowlist = allowlist

    @property
    def qedge_keys(self):
        """Gets the qedge_keys of this OperationFillParametersOneOf.

        A list of qedge keys. If included only edges corresponding to the given qedge keys, as well as their connected nodes, will be filled. If not included all edges will be filled.  # noqa: E501

        :return: The qedge_keys of this OperationFillParametersOneOf.
        :rtype: List[str]
        """
        return self._qedge_keys

    @qedge_keys.setter
    def qedge_keys(self, qedge_keys):
        """Sets the qedge_keys of this OperationFillParametersOneOf.

        A list of qedge keys. If included only edges corresponding to the given qedge keys, as well as their connected nodes, will be filled. If not included all edges will be filled.  # noqa: E501

        :param qedge_keys: The qedge_keys of this OperationFillParametersOneOf.
        :type qedge_keys: List[str]
        """

        self._qedge_keys = qedge_keys
