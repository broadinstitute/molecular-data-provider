# This workflow will install Python dependencies, run tests and lint with a single version of Python
# This workflow was programmed to:
#   1. be triggered manually (on: workflow_dispatch:), see https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow
#   2. be triggered by cron scheduling (on: schedule:) to run at midnight UTC
#
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Daily ITRB CI Translator testing

# Controls when the workflow will run
on:
# Triggers the workflow on cron event but only for the CI branch
  workflow_dispatch:
  schedule:
#   - cron: '00 00 * * *'   # midnight UTC
    - cron: '20 08 * * *'   # 8:20AM UTC
jobs:
# This workflow contains a multiple jobs to test each transformer

  bigg_models:
    runs-on: ubuntu-latest
      
    steps:    
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }          
 
        - name: download all the required python modules
          run: pip install -r test/requirements.txt

#        - name: Run a step with retry on failure
#          run: |
#            max_retries=10
#            retry_count=0
#            success=false
#            while [ $retry_count -lt $max_retries ]; do
#              echo "Attempt $((retry_count+1)) of $max_retries"

              #command
              #behave test/features/bigg_models.feature
 #             echo "behave test ran?"
 #             if [ $? = 0 ]; then  # $? is a special variable in Bash that holds the exit status of the most recently executed command
 #               success=true
 #               echo "Success with behave test"
 #               break
 #             else
 #               echo "Attempt $((retry_count+1)) failed."
 #               retry_count=$((retry+1))
 #               sleep 20
 #             fi
 #           done

 #           if ["$success" = false ]; then
 #             echo "Command failed after $max_retries attempts."
 #             exit 1
 #           fi
           
          
        - name: Start the BDD testing of the checked out feature file
          uses: nick-fields/retry@v3
          with:
            max_attempts: 20 # This will retry the job 19 additional times after the first failure
            retry_on: exit
            timeout_minutes: 25 # specifies how long the GitHub Actions job should wait before retrying the command or step. 
            command: |
              sleep 20
              behave test/features/bigg_models.feature
            retry_on_exit_code: 1
# valid inputs are ['timeout_minutes', 'timeout_seconds', 'max_attempts', 
# 'command', 'retry_wait_seconds', 'shell', 'polling_interval_seconds', 
# 'retry_on', 'warning_on_retry', 'on_retry_command', 'continue_on_error', 
# 'new_command_on_retry', 'retry_on_exit_code']

  bindingdb:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }

        - name: download all the required python modules
          run: pip install -r test/requirements.txt

        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/bindingdb.feature 
          
  chebi:
    runs-on: ubuntu-latest
    steps:    
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
 
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/chebi.feature

  chembank:
    runs-on: ubuntu-latest
    steps:    
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }     

        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/chembank.feature

  chembl:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }    
 
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/chembl.feature

  cmap:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }
     
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/cmap.feature

  ctd:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/ctd.feature
          
          
  ctrp:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }
     
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/ctrp.feature
          
  depmap:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/depmap.feature

  dgidb:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }    
 
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/dgidb.feature

  drugbank:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/drugbank.feature

  drugcentral:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }    
 
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/drugcentral.feature

  dsstoxdb:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }    
 
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/dsstoxdb.feature
          
  gelinea:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }  
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/gelinea.feature

  gelinea-trapi:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }
          
        - name: download all the required python modules
          run: pip install -r test/requirements.txt

        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/gelinea-trapi.feature
          
  gtopdb:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/gtopdb.feature

  gwas:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }

        - name: download all the required python modules
          run: pip install -r test/requirements.txt

        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/gwas.feature

  hgnc:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }

        - name: download all the required python modules
          run: pip install -r test/requirements.txt

        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/hgnc.feature
          
  hmdb:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/hmdb.feature

  inxight_drugs:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }    
 
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/inxight_drugs.feature

  kinomescan:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }    
 
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/kinomescan.feature
          
  molecular_data_provider:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/molecular-data-provider.feature

  molepro-filters:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }
        
        - name: download all the required python modules
          run: pip install -r test/requirements.txt

        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/molepro-filters.feature

  moleprodb:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/moleprodb.feature
    
  node-normalizer:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/node-normalizer.feature

  pharmgkb:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/pharmgkb.feature

  pharos:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/pharos.feature

  probeminer:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/probeminer.feature         

  pubchem:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/pubchem.feature

  repurpose_hub:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/repurposing.feature

  rxnorm:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/rxnorm.feature
          
  sider:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }

        - name: download all the required python modules
          run: pip install -r test/requirements.txt

        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/sider.feature
 
  stitch:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/stitch.feature

  string:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/string.feature
          
  trapi:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci } 
    
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/trapi.feature


  uniprot:
    runs-on: ubuntu-latest
    steps:
        - name: Git checkout
          uses: actions/checkout@v2
          with: { ref: test-ci }
          
        - name: download all the required python modules
          run: pip install -r test/requirements.txt
          
        - name: Start the BDD testing of the checked out feature file
          run: behave test/features/uniprot.feature
