# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.classes.base_model_ import Model
from openapi_server.classes.compound_info import CompoundInfo
from openapi_server import util

from openapi_server.classes.compound_info import CompoundInfo  # noqa: E501

class CompoundListAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, elements=None):  # noqa: E501
        """CompoundListAllOf - a model defined in OpenAPI

        :param elements: The elements of this CompoundListAllOf.  # noqa: E501
        :type elements: List[CompoundInfo]
        """
        self.openapi_types = {
            'elements': List[CompoundInfo]
        }

        self.attribute_map = {
            'elements': 'elements'
        }

        self._elements = elements

    @classmethod
    def from_dict(cls, dikt) -> 'CompoundListAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The compound_list_allOf of this CompoundListAllOf.  # noqa: E501
        :rtype: CompoundListAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def elements(self):
        """Gets the elements of this CompoundListAllOf.

        Members of the compound list.  # noqa: E501

        :return: The elements of this CompoundListAllOf.
        :rtype: List[CompoundInfo]
        """
        return self._elements

    @elements.setter
    def elements(self, elements):
        """Sets the elements of this CompoundListAllOf.

        Members of the compound list.  # noqa: E501

        :param elements: The elements of this CompoundListAllOf.
        :type elements: List[CompoundInfo]
        """

        self._elements = elements
