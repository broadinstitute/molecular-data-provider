# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.classes.base_model_ import Model
from openapi_server.classes.attribute import Attribute
from openapi_server import util

from openapi_server.classes.attribute import Attribute  # noqa: E501

class ComparisonInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, operation=None, score=None, attributes=None):  # noqa: E501
        """ComparisonInfo - a model defined in OpenAPI

        :param operation: The operation of this ComparisonInfo.  # noqa: E501
        :type operation: str
        :param score: The score of this ComparisonInfo.  # noqa: E501
        :type score: float
        :param attributes: The attributes of this ComparisonInfo.  # noqa: E501
        :type attributes: List[Attribute]
        """
        self.openapi_types = {
            'operation': str,
            'score': float,
            'attributes': List[Attribute]
        }

        self.attribute_map = {
            'operation': 'operation',
            'score': 'score',
            'attributes': 'attributes'
        }

        self._operation = operation
        self._score = score
        self._attributes = attributes

    @classmethod
    def from_dict(cls, dikt) -> 'ComparisonInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comparison_info of this ComparisonInfo.  # noqa: E501
        :rtype: ComparisonInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operation(self):
        """Gets the operation of this ComparisonInfo.

        Comparison operation.  # noqa: E501

        :return: The operation of this ComparisonInfo.
        :rtype: str
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this ComparisonInfo.

        Comparison operation.  # noqa: E501

        :param operation: The operation of this ComparisonInfo.
        :type operation: str
        """
        if operation is None:
            raise ValueError("Invalid value for `operation`, must not be `None`")  # noqa: E501

        self._operation = operation

    @property
    def score(self):
        """Gets the score of this ComparisonInfo.

        Score of the comparison operation.  # noqa: E501

        :return: The score of this ComparisonInfo.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this ComparisonInfo.

        Score of the comparison operation.  # noqa: E501

        :param score: The score of this ComparisonInfo.
        :type score: float
        """
        if score is None:
            raise ValueError("Invalid value for `score`, must not be `None`")  # noqa: E501

        self._score = score

    @property
    def attributes(self):
        """Gets the attributes of this ComparisonInfo.

        Additional information about the comparison.  # noqa: E501

        :return: The attributes of this ComparisonInfo.
        :rtype: List[Attribute]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this ComparisonInfo.

        Additional information about the comparison.  # noqa: E501

        :param attributes: The attributes of this ComparisonInfo.
        :type attributes: List[Attribute]
        """

        self._attributes = attributes
